Versioning Control for Viewtech RDS:
 ☐ 1. Setting Up GIT
   ☐ 1.1. Installation of msysgit
   ☐ 1.2. Configure email and user
           git config –-global user.email “suba@viewtech.com.my”
           git config –-global user.name “Subathiran Subramanaim”
   ☐ 1.3. Configure Default editor (optional), take note that by default VIM is shipped with GIT as a default editor.
           git config –-global core.editor “notepad.exe”
           git config –-list to view the configs and confirm the changes
   ☐ 1.4. Generate SSH Keys & Backup both the keys
     ☐ 1.4.1. Generate key : [ssh-keygen –C “suba@viewtech.com.my” –t rsa”]
     ☐ 1.4.2. During the prompt enter to confirm the path and provide the passphrase twice.

   ☐ 2. Creating Repositories (local)
     ☐ 2.1. Identify the current work folder as a git repository [git init] and [git status]
     ☐ 2.2. Add .gitignore [touch .gitignore]  (to ignore non-committable files) 
     ☐ 2.3. Updating the .gitignore in future changes
       ☐ 2.3.1. Use your text editor or VIM to edit your .gitignore
       ☐ 2.3.2. The updated files need to be removed from GIT cache
                 [git rm -–cache <filename>] or [git rm –r -–cache <folder_path>]
   ☐ 3. Creating Repositories (Remote / Central)
   ☐ 3.1. Creating in GitHub (Optional Details)
     ☐ 3.1.1. Create account in GitHub
     ☐ 3.1.2. Create new repository by including the public rsa key
     ☐ 3.1.3. Linking to the remote repository by labeling it as “origin”
               [git remote add origin git@github.com:subathiran/HelloWorld.git]
     ☐ 3.1.4. Pushing the local repository to remote git repository
               [git push origin master]
     ☐ 3.1.5. Now, the codes can be seen in GitHub
   ☐ 3.2. Creating in Local Network in Bonobo Git Server
 
 ☐ 4. Sample work flow
   ☐ 4.1. Check Current Status : [git status]
   ☐ 4.2. Add to Staging Area : [git add .] or [git add -A], then check status : [git status]
   ☐ 4.4. Commit to local repository : [git commit –m “<your message>”] or [git commit] to commit and open vim / text editor to enter message 
   ☐ 4.5. Check current status : [git status]
   ☐ 4.6. Check the commit logs : [git log]
   ☐ 4.7. Check current branch : [git branch]
   ☐ 4.8. Create and switch to new branch and checkout [git checkout –b user_prompt]Sa
           The command above is equivalent to executing 2 git commands, [git branch user_prompt] & [git checkout user_prompt]
   ☐ 4.9. Merge branches [git checkout master & git merge user_prompt], Will merge the user_prompt into master
   ☐ 4.10 You can [git branch –D user_prompt] to remove the branch
   ☐ 4.11 To verify Issue [git branch], which will show the branches and * indicates the current working branch
   ☐ 4.12 Make some code changes
   ☐ 4.13 Issue [git status], which will show you the files changed
   ☐ 4.14 Add to the staging area : [git add .], do a [git status] to check
   ☐ 4.15 Commit to the local repository [git commit –m “your new message”]
   ☐ 5.16 You can also add and commit at the same time: [git commit –a –m “your new message”] 
   ☐ 4.17 [gitk] can be used to open the GIT GUI to view and compare previous changes
   ☐ 4.18 Resetting / Rolling back 
     ☐ 4.16.1. Rolling back working directory, staging area and local repository [git reset -–hard HEAD^]. 
                “HEAD^” means to reset commits to one prior (“^”)   to the latest HEAD aka the latest commit.
     ☐ 4.16.2 [git reset -–hard]. Only clears the working directory and staging area
   ☐ 4.17 Checking out to a different branch [git checkout master]
   ☐ 4.18 View remote linked repository [git remote -v]
   ☐ 4.19 Pulling changes from another branch to the current [git pull –-squash . user_prompt]
   ☐ 4.20 Pushing to remote repository [git push origin master]
   ☐ 4.21 Removing a branch that has been completed [git branch –D user_prompt]
   ☐ 4.22 Removing the link to the remote branch [git remote rm origin] 
   ☐ 4.23 Cloning a remote repository to local
           [git clone http://192.168.0.149/Bonobo/Git.aspx/myproject]
   ☐ 4.24 Amend the current commit message [git commit -–amend –m “Message”]
   ☐ 4.25 Update local repository with remote’s [git pull origin master]
   ☐ 4.26 If a pull or push failes (merge problem occurs), use a force push to overwrite the remote repository [git push origin +master]
☐ 5 VIM Editor
 ☐ 5.1.  On first entering the VIM editor, press “i” to start editing text
 ☐ 5.2.  Press “escape” to go out of edit mode
 ☐ 5.3.  Press “Shift" + ":“  and 
   ☐ 5.3.1.   Press “w” and enter  - to save and remain in the editor
   ☐ 5.3.2.  Press “q” and enter  - to exit the editor
   ☐ 5.3.3.  Press “wq” and enter  - to save and exit the editor
   ☐ 5.3.4.  Press “q!” and enter  - to exit without saving




